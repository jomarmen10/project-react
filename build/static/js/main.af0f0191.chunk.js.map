{"version":3,"sources":["components/Header/Header.js","constant/routes.js","components/Post/Post.js","components/Edit/Edit.js","components/Profile/Profile.js","components/Register/Register.js","components/Login/Login.js","components/User/User.js","App.js","serviceWorker.js","index.js"],"names":["Header","state","newSearch","searchHandler","e","_this","setState","Object","defineProperty","currentTarget","name","value","submitHandler","console","log","props","preventDefault","searchUpdate","react_default","a","createElement","className","onSubmit","this","type","placeholder","onChange","autoComplete","isLogged","react_router_dom","to","href","Component","Post","pics","map","p","i","ref","key","src","user","profile_image","small","alt","concat","username","urls","description","alt_description","Edit","firstName","lastName","email","password","profilePic","postPic","inputHandler","target","update","currentUser","_this$state","onClick","deleteUser","Profile","getProfile","_callee","data","profile","regenerator_default","wrap","_context","prev","next","fetch","match","params","id","process","sent","json","abrupt","t0","stop","_this2","then","res","_this$state$user","photos","followers_count","following_count","bio","large","_id","render","components_Edit_Edit","withRouter","Register","logged","register","react_router","Login","login","style","marginTop","User","current","App","searchPic","delUser","method","history","push","_callee2","info","updateUser","updatedUser","_context2","credentials","body","JSON","stringify","headers","Content-Type","success","_callee3","registeredUser","newUser","_context3","_callee4","loginUser","logUser","_context4","getPics","_callee5","_context5","searchPics","_callee6","str","obj","pic","parsedPic","_context6","result","results","_this3","components_Header_Header","exact","path","components_Login_Login","components_Profile_Profile","components_Post_Post","components_Register_Register","components_User_User","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af0f0191.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Header.css';\nimport * as routes from '../../constant/routes';\n\nclass Header extends Component {\n  state = {\n    newSearch: ''\n  };\n\n  searchHandler = e => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value\n    });\n  };\n\n  submitHandler = e => {\n    console.log('submitted');\n    console.log(this.props);\n    e.preventDefault();\n    this.props.searchUpdate(this.state.newSearch);\n  };\n\n  render() {\n    return (\n      <nav className=\"Nav\">\n        <div className=\"Nav-menus\">\n          <div className=\"Nav-brand\">\n            <a className=\"Nav-brand-logo\" />\n          </div>\n          <div className=\"search-bar\">\n            <form onSubmit={this.submitHandler}>\n              <input\n                type=\"text\"\n                placeholder=\"search\"\n                value={this.state.newSearch}\n                name=\"newSearch\"\n                onChange={this.searchHandler}\n                autoComplete=\"off\"\n              />\n            </form>\n          </div>\n          <div className=\"Nav-link\">\n            {this.props.isLogged ? (\n              <div>\n                <NavLink to={routes.FEED}>FEED</NavLink> <br />\n                <NavLink to={routes.LOGIN}>PROFILE</NavLink> <br />\n                <a href=\"/login\">logout</a>\n              </div>\n            ) : (\n              <div>\n                <NavLink to={routes.REGISTER}>REGISTER</NavLink> <br />\n                <NavLink to={routes.LOGIN}>LOGIN</NavLink>\n              </div>\n            )}\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","export const FEED = '/';\nexport const PROFILE = '/users/:id';\nexport const REGISTER = '/register';\nexport const LOGIN = '/login'\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Post.css';\n\nclass Post extends Component {\n  render() {\n    const { pics } = this.props;\n    console.log(pics);\n    return (\n      <div>\n        {pics.map((p, i) => (\n          <article className=\"Post\" ref=\"Post\" key={i}>\n            <header>\n              <div className=\"Post-user\">\n                <div className=\"Post-user-avatar\">\n                  <img src={p.user.profile_image.small} alt=\"Chris\" />\n                </div>\n                <div className=\"Post-user-nickname\">\n                  <Link to={`/users/${p.user.username}`}>\n                    <span>{p.user.username}</span>\n                  </Link>\n                </div>\n              </div>\n            </header>\n            <div className=\"Post-image\">\n              <div className=\"Post-image-bg\">\n                <img alt=\"Icon Living\" src={p.urls.small} />\n              </div>\n            </div>\n            <div className=\"Post-caption\">\n              <Link to={`/users/${p.user.username}`}>\n                <strong>{p.user.username}</strong>\n              </Link>\n              {p.description ? p.description : p.alt_description}\n            </div>\n          </article>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Post;\n","import React , { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\n\nclass Edit extends Component {\n\n  state={\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    profilePic: '',\n    postPic: ''\n  }\n\n  componentDidMount(){\n    this.setState({\n      firstName: this.props.currentUser.firstName,\n      lastName: this.props.currentUser.lastName,\n      email: this.props.currentUser.email,\n      password: this.props.currentUser.password,\n      profilePic: this.props.currentUser.profilePic,\n      postPic: this.props.currentUser.postPic,\n    })\n  }\n\n  inputHandler = (e)=>{\n    this.setState({\n      [e.target.name]:e.target.value\n    })\n  }\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    this.props.update(this.state)\n  }\n\n  render(){\n    const {firstName, lastName, email, password, profilePic, postPic} = this.state\n    return(\n      <div>\n        <form onSubmit={this.submitHandler}>\n          <input type='text' name='firstName' value={firstName} placeholder=\"First Name\" onChange={this.inputHandler}></input>\n          <input type='text' name='lastName' value={lastName} placeholder=\"Last Name\" onChange={this.inputHandler}></input>\n          <input type='text' name='email' value={email} placeholder=\"Email\" onChange={this.inputHandler}></input>\n          <input type='password' name='password' value={password} placeholder='Password' onChange={this.inputHandler}></input>\n          <input type='text' name='profilePic' value={profilePic} placeholder='Profile Picture (URL)' onChange={this.inputHandler}></input>\n          <input type='text' name='postPic' value={postPic} placeholder='Upload photo(URL)' onChange={this.inputHandler}></input>\n          <button type=\"submit\">Submit</button>\n        </form>\n        <button onClick={this.props.deleteUser}>delete user</button>\n      </div>\n    )\n  }\n}\n\nexport default Edit;\n","import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom'\nimport Edit from '../Edit/Edit'\n\nimport './Profile.css'\n\nclass Profile extends Component {\n  state = {\n    user: {},\n\n  }\n\n  componentDidMount() {\n    this.getProfile().then(res => {\n      return this.setState({user: res})\n    })\n  }\n\n  getProfile = async() => {\n    try{\n      const data = await fetch(`https://api.unsplash.com/users/${this.props.match.params.id}?client_id=${process.env.REACT_APP_KEY}`)\n      const profile = data.json()\n      return profile\n    }catch(err){\n      return err\n    }\n  }\n\n  render(){\n    const {username, photos, profile_image, followers_count, following_count, bio, id } = this.state.user\n    console.log(bio)\n\n    return(\n\n      <div >\n\n        <div className='container'>\n          <div className='profile'>\n            <div className=\"profile-image\">\n              {profile_image ? <img src={profile_image.large}></img> : <img src='https://www.showflipper.com/blog/images/default.jpg'></img>}\n            </div>\n            <div className=\"profile-username\">\n              <h4>{username}</h4>\n              {\n                this.props.isLogged && (!id)\n                  ? <Link to={`/edit/${this.props.currentUser._id}`} render={()=><Edit />}>EDIT</Link>\n                  : null\n              }\n\n                    </div>\n            <div className='profile-stats'>\n              <ul>\n                <li>\n                  {following_count} following\n                </li>\n                <li>\n                  {followers_count} followers\n                </li>\n              </ul>\n            </div>\n            <div className='profile-bio'>\n              <p>{bio}</p>\n            </div>\n          </div>\n        </div>\n\n\n\n        <div className='container'>\n          <div className='gallery'>\n            {\n              photos\n                ? photos.map((p,i) =>\n                  <div className='gallery-item'>\n                    <img className='gallery-image' key={i} src={p.urls.small}></img>\n                  </div>\n                )\n                : null\n            }\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Profile);\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass Register extends Component {\n  state = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    logged: false\n  }\n\n  inputHandler = (e) => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value\n    })\n  }\n\n  submitHandler= async(e) => {\n    e.preventDefault();\n    this.props.register(this.state)\n  }\n\n  render(){\n    const {firstName, lastName, email, password} = this.state\n    return(\n      <div>\n        {this.props.isLogged\n          ? <Redirect to={`/edit/${this.props.currentUser._id}`}/>\n          :\n          (\n            <form onSubmit={this.submitHandler}>\n              <input type='text' name='firstName' value={firstName} placeholder=\"First Name\" onChange={this.inputHandler}></input>\n              <input type='text' name='lastName' value={lastName} placeholder=\"Last Name\" onChange={this.inputHandler}></input>\n              <input type='text' name='email' value={email} placeholder=\"Email\" onChange={this.inputHandler}></input>\n              <input type='password' name='password' value={password} placeholder='Password' onChange={this.inputHandler}></input>\n\n              <button type=\"submit\">REGISTER</button>\n            </form>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react'\nimport { Redirect } from \"react-router-dom\";\n\n\nclass Login extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  inputHandler = (e) => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value\n    })\n  }\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    this.props.login(this.state)\n  }\n\n  render(){\n    return(\n      <div>\n        {\n          this.props.isLogged\n            ? <Redirect to={`/users/${this.props.currentUser._id}`}/> // <Redirect to={'/user'} />\n            :<form onSubmit={this.submitHandler} style={{marginTop: '12rem'}}>\n            <input type='text' name='email' value={this.state.email} placeholder='email' onChange={this.inputHandler}></input>\n            <input type='password' name='password' value={this.state.password} placeholder='password' onChange={this.inputHandler}></input>\n            <button type='Submit'>Login</button>\n          </form>\n\n        }\n\n\n      </div>\n    )\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport Edit from '../Edit/Edit'\nimport { Link } from 'react-router-dom';\n\nclass User extends Component {\n  state = {\n    current: null\n  }\n\n  componentDidMount(){\n    this.setState({\n      current: this.props.currentUser\n    })\n  }\n\n  render(){\n    console.log(this.props.currentUser)\n    console.log(this.state.current)\n    return(\n\n\n      <div>\n        {this.state.current.email}\n      </div>\n    )\n  }\n}\n\nexport default User;\n","import React, { Component } from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom';\n\nimport Header from './components/Header/Header';\nimport Post from './components/Post/Post';\nimport Profile from './components/Profile/Profile';\nimport Register from './components/Register/Register';\nimport Login from './components/Login/Login';\nimport Edit from './components/Edit/Edit';\n\nimport User from './components/User/User'; //test component only\n\nimport * as routes from './constant/routes';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    currentUser: null,\n    logged: false,\n    pics: [],\n    searchPic: ''\n  };\n\n  componentDidMount() {\n    console.log('mounted');\n    this.getPics().then(res => {\n      console.log(res);\n      this.setState({\n        pics: (res && res.results) || []\n      });\n    });\n  }\n\n  // apiHandler = (str) => {\n  //   if(!str){\n  //     return `https://api.unsplash.com/photos/random/?client_id=${process.env.REACT_APP_KEY}&count=30`\n  //   } else {\n  //     return `https://api.unsplash.com/search/photos/?client_id=${process.env.REACT_APP_KEY}&query=${this.state.searchPic}&per_page=30`\n  //   }\n  // }\n\n  delUser = async () => {\n    console.log('hello');\n    try {\n      const deleteUser = await fetch(\n        `/users/delete/${this.state.currentUser._id}`,\n        {\n          method: 'DELETE'\n        }\n      );\n      this.setState({\n        logged: false,\n        currentUser: null\n      });\n      this.props.history.push('/');\n    } catch (err) {\n      return err;\n    }\n  };\n\n  update = async info => {\n    try {\n      const updateUser = await fetch(`/users/${this.state.currentUser._id}`, {\n        method: 'PUT',\n        credentials: 'include',\n        body: JSON.stringify(info),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const updatedUser = await updateUser.json();\n      if (updateUser.success) {\n        this.setState({\n          currentUser: updatedUser.user\n        });\n      }\n      this.props.history.push('/');\n    } catch (err) {\n      return err;\n    }\n  };\n\n  register = async info => {\n    try {\n      const registeredUser = await fetch('/users/create', {\n        method: 'POST',\n        credentials: 'include',\n        body: JSON.stringify(info),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const newUser = await registeredUser.json();\n      if (newUser.success) {\n        this.setState({\n          currentUser: newUser.user,\n          logged: true\n        });\n      }\n    } catch (err) {\n      return err;\n    }\n  };\n\n  login = async info => {\n    try {\n      const loginUser = await fetch('/users/login', {\n        method: 'POST',\n        credentials: 'include',\n        body: JSON.stringify(info),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const logUser = await loginUser.json();\n      if (logUser.success) {\n        this.setState({\n          currentUser: logUser.user,\n          logged: true\n        });\n      }\n    } catch (err) {\n      return err;\n    }\n  };\n\n  getPics = async () => {\n    try {\n      console.log('getting pics');\n      const data = await fetch('/api/v1');\n\n      const pics = await data.json();\n      console.log(pics);\n      return pics;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  searchPics = async str => {\n    try {\n      const obj = {\n        searchPic: str\n      };\n      const pic = await fetch('/api/v1', {\n        method: 'POST',\n        credentials: 'include',\n        body: JSON.stringify(obj),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const parsedPic = await pic.json();\n      this.setState({\n        pics: parsedPic.result.results\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <div>\n        <Header isLogged={this.state.logged} searchUpdate={this.searchPics} />\n        <Switch>\n          <Route\n            exact\n            path={'/login'}\n            render={() => (\n              <Login\n                login={this.login}\n                currentUser={this.state.currentUser}\n                isLogged={this.state.logged}\n              />\n            )}\n          />\n          <Route\n            exact\n            path={routes.PROFILE}\n            render={() => (\n              <Profile\n                currentUser={this.state.currentUser}\n                isLogged={this.state.logged}\n              />\n            )}\n          />\n          <Route\n            exact\n            path={'/edit/:id'}\n            render={() => (\n              <Edit\n                currentUser={this.state.currentUser}\n                update={this.update}\n                deleteUser={this.delUser}\n              />\n            )}\n          />\n          <Route\n            exact\n            path={routes.FEED}\n            render={() => <Post pics={this.state.pics} />}\n          />\n          <Route\n            exact\n            path={routes.REGISTER}\n            render={() => (\n              <Register\n                currentUser={this.state.currentUser}\n                register={this.register}\n                isLogged={this.state.logged}\n              />\n            )}\n          />\n          <Route\n            exact\n            path={'/user'}\n            render={() => (\n              <User\n                currentUser={this.state.currentUser}\n                isLogged={this.state.logged}\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}